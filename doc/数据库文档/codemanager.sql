-- MySQL Script generated by MySQL Workbench
-- 01/07/16 00:31:48
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema code_managerdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema code_managerdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `code_managerdb` DEFAULT CHARACTER SET utf8 ;
USE `code_managerdb` ;

-- -----------------------------------------------------
-- Table `code_managerdb`.`cm_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `code_managerdb`.`cm_user` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `passward` VARCHAR(45) NOT NULL,
  `token` VARCHAR(45) NULL,
  `cm_user_desc` VARCHAR(45) NULL,
  UNIQUE INDEX `cm_user_id_UNIQUE` (`user_id` ASC),
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `code_managerdb`.`cm_notebook_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `code_managerdb`.`cm_notebook_type` (
  `notebook_type_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `desc` VARCHAR(45) NULL,
  PRIMARY KEY (`notebook_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `code_managerdb`.`cm_notebook`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `code_managerdb`.`cm_notebook` (
  `notebook_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `desc` VARCHAR(45) NULL,
  `createtime` DATETIME NOT NULL,
  `parentid` INT NULL,
  `notebook_type_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`notebook_id`, `notebook_type_id`),
  INDEX `fk_cm_notebook_cm_notebook_type1_idx` (`notebook_type_id` ASC),
  CONSTRAINT `fk_cm_notebook_cm_notebook_type1`
    FOREIGN KEY (`notebook_type_id`)
    REFERENCES `code_managerdb`.`cm_notebook_type` (`notebook_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `code_managerdb`.`cm_note`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `code_managerdb`.`cm_note` (
  `note_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `notebook_id` INT UNSIGNED NOT NULL,
  `title` VARCHAR(45) NULL,
  `create_time` DATETIME NULL,
  `last_modify_time` DATETIME NULL,
  `status_id` VARCHAR(45) NULL,
  `type_id` VARCHAR(45) NULL,
  `content` TEXT NULL,
  PRIMARY KEY (`note_id`),
  INDEX `fk_cm_note_cm_notebook_idx` (`notebook_id` ASC),
  UNIQUE INDEX `note_id_UNIQUE` (`note_id` ASC),
  CONSTRAINT `fk_cm_note_cm_notebook`
    FOREIGN KEY (`notebook_id`)
    REFERENCES `code_managerdb`.`cm_notebook` (`notebook_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `code_managerdb`.`cm_attachments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `code_managerdb`.`cm_attachments` (
  `attachments_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `filename` VARCHAR(45) NULL,
  `fileextension` VARCHAR(45) NULL,
  `content` VARCHAR(45) NULL,
  `filesize` VARCHAR(45) NULL,
  `mimetype` VARCHAR(45) NULL,
  PRIMARY KEY (`attachments_id`),
  UNIQUE INDEX `attachments_id_UNIQUE` (`attachments_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `code_managerdb`.`cm_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `code_managerdb`.`cm_tags` (
  `tags_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NULL,
  PRIMARY KEY (`tags_id`),
  UNIQUE INDEX `tags_id_UNIQUE` (`tags_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `code_managerdb`.`cm_note_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `code_managerdb`.`cm_note_user` (
  `note_user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `note_id` INT UNSIGNED NOT NULL,
  `umask` TINYINT NULL,
  PRIMARY KEY (`note_user_id`, `user_id`, `note_id`),
  INDEX `fk_cm_user_has_cm_note_cm_note1_idx` (`note_id` ASC),
  INDEX `fk_cm_user_has_cm_note_cm_user1_idx` (`user_id` ASC),
  UNIQUE INDEX `note_user_id_UNIQUE` (`note_user_id` ASC),
  CONSTRAINT `fk_cm_user_has_cm_note_cm_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `code_managerdb`.`cm_user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cm_user_has_cm_note_cm_note1`
    FOREIGN KEY (`note_id`)
    REFERENCES `code_managerdb`.`cm_note` (`note_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `code_managerdb`.`cm_notebook_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `code_managerdb`.`cm_notebook_user` (
  `notebook_user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `notebook_id` INT UNSIGNED NOT NULL,
  `umask` TINYINT NULL,
  PRIMARY KEY (`notebook_user_id`, `user_id`, `notebook_id`),
  INDEX `fk_cm_user_has_cm_notebook_cm_notebook1_idx` (`notebook_id` ASC),
  INDEX `fk_cm_user_has_cm_notebook_cm_user1_idx` (`user_id` ASC),
  UNIQUE INDEX `notebook_user_id_UNIQUE` (`notebook_user_id` ASC),
  CONSTRAINT `fk_cm_user_has_cm_notebook_cm_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `code_managerdb`.`cm_user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cm_user_has_cm_notebook_cm_notebook1`
    FOREIGN KEY (`notebook_id`)
    REFERENCES `code_managerdb`.`cm_notebook` (`notebook_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `code_managerdb`.`cm_tags_note`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `code_managerdb`.`cm_tags_note` (
  `tags_note_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `note_id` INT UNSIGNED NOT NULL,
  `tags_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`tags_note_id`, `note_id`, `tags_id`),
  INDEX `fk_cm_note_has_cm_tags_cm_tags1_idx` (`tags_id` ASC),
  INDEX `fk_cm_note_has_cm_tags_cm_note1_idx` (`note_id` ASC),
  UNIQUE INDEX `tag_note_id_UNIQUE` (`tags_note_id` ASC),
  UNIQUE INDEX `tags_id_UNIQUE` (`tags_id` ASC),
  UNIQUE INDEX `note_id_UNIQUE` (`note_id` ASC),
  CONSTRAINT `fk_cm_note_has_cm_tags_cm_note1`
    FOREIGN KEY (`note_id`)
    REFERENCES `code_managerdb`.`cm_note` (`note_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cm_note_has_cm_tags_cm_tags1`
    FOREIGN KEY (`tags_id`)
    REFERENCES `code_managerdb`.`cm_tags` (`tags_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `code_managerdb`.`cm_tag_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `code_managerdb`.`cm_tag_user` (
  `tag_user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `tags_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`tag_user_id`, `user_id`, `tags_id`),
  INDEX `fk_cm_user_has_cm_tags_cm_tags1_idx` (`tags_id` ASC),
  INDEX `fk_cm_user_has_cm_tags_cm_user1_idx` (`user_id` ASC),
  UNIQUE INDEX `tag_user_id_UNIQUE` (`tag_user_id` ASC),
  CONSTRAINT `fk_cm_user_has_cm_tags_cm_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `code_managerdb`.`cm_user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cm_user_has_cm_tags_cm_tags1`
    FOREIGN KEY (`tags_id`)
    REFERENCES `code_managerdb`.`cm_tags` (`tags_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
